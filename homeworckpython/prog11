import telebot

from telebot import types


token = ''
adminuserid = ""
joinUser = []

with open('Rassilka.txt', encoding='utf-8') as f:
    joinUser.extend(row.rstrip() for row in f)

bot = telebot.TeleBot(token)



Main = types.InlineKeyboardMarkup()
button1 = types.InlineKeyboardButton(text="–ú–æ–π –∏–Ω—Å—Ç–∞–≥—Ä–∞–º–º", url='https://instagram.com/lash_maker_nvrsk_anastasia?igshid=YmMyMTA2M2Y=')
button2 = types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å—å –∫–æ –º–Ω–µ", url="https://mst.link/tvoymaster_anastasiya")
button3 = types.InlineKeyboardButton(text='–ú–æ–π –ø—Ä–∞–π—Å –ª–∏—Å—Ç', callback_data='price')
button4 = types.InlineKeyboardButton(text='–û–±—Ä–∞–∑–µ—Ü —Ä–∞–±–æ—Ç', callback_data='work')
button5 = types.InlineKeyboardButton(text='–°–≤—è–∑—å —Å–æ –º–Ω–æ–π', callback_data='contact')
button6 = types.InlineKeyboardButton(text='–ö–∞–∫ –∫ –Ω–∞–º –ø–æ–ø–∞—Å—Ç—å', callback_data='geo')
button7 = types.InlineKeyboardButton(text="–ú–æ–∏ –†–µ–∫–∞–º–µ–Ω–¥–∞—Ü–∏–∏ –ú–∞—Å—Ç–µ—Ä–æ–≤",callback_data='masters' )
button8 = types.InlineKeyboardButton(text="???–ß—Ç–æ —Ç–∞–∫–æ–µ RF –õ–∏—Ñ—Ç–∏–Ω–≥???",callback_data='RF' )
Main.add(button1)
Main.add(button2)
Main.add(button3)
Main.add(button4)
Main.add(button5)
Main.add(button6)
Main.add(button7)
Main.add(button8)


kb = telebot.types.ReplyKeyboardMarkup(True)
kb.row('‚ùå –û—Ç–º–µ–Ω–∞')


@bot.message_handler(commands=['start', 'help'])
def start(message):
    if str(message.chat.id) not in joinUser:
        with open('Rassilka.txt', "a", encoding='utf-8') as f:
            f.write(str(message.chat.id) + "\n")
            joinUser.append(str(message.chat.id))
    mess = f'–ó–¥—Ä–∞–≤—Å—Ç—É–π—Ç–µ,{message.from_user.first_name} {message.from_user.last_name}, –Ø –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –ê–Ω–∞—Å—Ç–∞—Å–∏–∏\n\nüëáüëá –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª üëáüëá, (–ø–æ –ø–æ–≤–æ–¥—É –æ—Å–≤–æ–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ lashmaker –ø–∏—à–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª (–°–≤—è–∑—å —Å–æ –º–Ω–æ–π)) '
    bot.send_message(message.chat.id, mess, parse_mode='html', reply_markup=Main)



@bot.message_handler(commands=['puki'])
def mess(message):
    try:
        for user in joinUser:
            bot.send_message(user, str(message.text).split('msg ')[1])
    except:
        pass


@bot.callback_query_handler(func=lambda call: True)


def call_action(call):
    userid = str(call.message.chat.id)
    username = str(call.from_user.username)
    if call.data == 'price':
        img = open('photo_2022-10-25_23-28-05.jpg', 'rb')
        bot.send_photo(userid, img)
        img.close


    elif call.data == 'RF':
        img1 = open('photo_2022-12-08_20-59-35.jpg', 'rb')
        bot.send_photo(userid, img1)
        img.close


    elif call.data == 'masters':
        bot.send_message(userid,
                         f'–ú–∞—Å—Ç–µ—Ä –ø–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω–æ–≥–æ –º–∞–∫–∏—è–∂–∞ –Æ–ª–∏—è - https://t.me/Ustino4444ka'
                         f'',
                         reply_markup=Main)


    elif call.data == 'work':
        work1 = open('photo_2022-10-25_23-32-03.jpg', 'rb')
        work2 = open('photo_2022-10-25_23-35-54.jpg', 'rb')
        work3 = open('photo_2022-10-25_23-37-53.jpg', 'rb')
        work4 = open('photo_2022-10-25_23-43-39.jpg', 'rb')
        work5 = open('photo_2022-10-25_23-46-30.jpg', 'rb')
        work6 = open('photo_2022-10-25_23-47-47.jpg', 'rb')

        bot.send_media_group(userid, [telebot.types.InputMediaPhoto(work1), telebot.types.InputMediaPhoto(work2),
                                      telebot.types.InputMediaPhoto(work3), telebot.types.InputMediaPhoto(work4),
                                      telebot.types.InputMediaPhoto(work5), telebot.types.InputMediaPhoto(work6)])

        work1.close
        work2.close
        work3.close
        work4.close
        work5.close
        work6.close







    elif call.data == 'contact':
        def contact_me(message):
            try:
                if message.text.lower() == '‚ùå –æ—Ç–º–µ–Ω–∞':
                    bot.send_message(message.chat.id,
                                     f'–ó–¥—Ä–∞–≤—Å—Ç—É–π—Ç–µ,<b>{call.from_user.first_name} {call.from_user.last_name}</b>, –Ø –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –ê–Ω–∞—Å—Ç–∞—Å–∏–∏\n\nüëáüëá –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª üëáüëá',
                                     reply_markup=Main)
                elif (len(message.text) < 3000):
                    bot.send_message(message.chat.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                    bot.send_message(message.chat.id,
                                     f'–ó–¥—Ä–∞–≤—Å—Ç—É–π—Ç–µ,<b>{call.from_user.first_name} {call.from_user.last_name}</b>, –Ø –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –ê–Ω–∞—Å—Ç–∞—Å–∏–∏\n\nüëáüëá –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª üëáüëá',
                                     reply_markup=Main)
                    mess = str(message.text)
                    bot.send_message(adminuserid, "üí¨ <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: </b>" + str(call.from_user.first_name) + " " + str(
                        call.from_user.last_name) + " @" + str(username) + " (" + str(
                        userid) + ")\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n<i>" + str(mess) + "</i>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ", parse_mode='HTML')
                else:
                    sent = bot.send_message(userid, '<b>–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–Ω–æ–≤–∞:</b>',
                                            parse_mode='HTML', reply_markup=kb)
                    bot.register_next_step_handler(sent, contact_me)
            except:
                sent = bot.send_message(userid, '<b>–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å,—è –æ—Ç–≤–µ—á—É –í–∞–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ—Å–≤–æ–±–æ–∂—É—Å—å:</b>', parse_mode='HTML', reply_markup=kb)
                bot.register_next_step_handler(sent, contact_me)

        sent = bot.send_message(userid, '<b>–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å,—è –æ—Ç–≤–µ—á—É –í–∞–º , –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ—Å–≤–æ–±–æ–∂—É—Å—å:</b>', parse_mode='HTML', reply_markup=kb)
        bot.register_next_step_handler(sent, contact_me)

    elif call.data == 'geo':
        bot.send_location(userid, '44.709231', '37.785211')





bot.polling(none_stop=True, interval=0)